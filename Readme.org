* Setup and run SIRIUS on LUMI-G
** Preparation
- You should have received =cray-mpich-binary-8.1.27.tar.gz=. Copy it to your home directory and adapt the url in the recipe accordingly:
[[file:repo/packages/cray-mpich/package.py::url = "file:///users/sipintar/cray-mpich-binary-8.1.27.tar.gz"]]
- Replace `<projid>` in [[file:spack-setup/setup::projid=<projid>]] by your project id.

** Configuration files for spack and custom spack repository

We are using a custom spack configruation, where the rocm packages are setup as external dependencies, using the official version on LUMI (rocm 5.2.3).

#+begin_src bash
spack-setup
├── setup
└── spack-config
    ├── compilers.yaml
    ├── config.yaml
    ├── modules.yaml
    └── packages.yaml
#+end_src

In `repo` there is a custom spack recipe for `cray-mpich`. This is using a binary tarball of cray-mpich@8.1.27. It allows to use GPU direct communication, if this isn't required, in principle the usual external/module based cray-mpich can be used.

** Spack environment

An example is provided in [[file:sirius-env]] to compile SIRIUS for the LUMI-G partition.

~spack.yaml~
#+begin_src yaml
  spack:
    view: true
    specs:
    - sirius@develop+rocm+magma+apps+fortran build_type=Release
    packages:
      all:
        variants: amdgpu_target=gfx90a amdgpu_target_sram_ecc=gfx90a
        target: [zen3]
      openblas:
        require: [threads=openmp]
      cray-mpich:
        require: ['@8.1.29+rocm']
    repos:
    - ./repo
    concretizer:
      targets:
        host_compatible: false
      unify: true
#+end_src


** Compile SIRIUS
#+begin_src bash
  # TODO: adapt first projid, location of git clone https://github.com/spack/spack.git as needed
  source spack-setup/setup
  # activate the anonymous spack environment for sirius (directory containing spack.yaml)
  spack env activate /path/to/sirius-env
  # check concretization output before install
  spack concretize -f
  spack install
#+end_src

** Run SIRIUS
An example to set the correct cpu/gpu affinity is in file:./affinity.
